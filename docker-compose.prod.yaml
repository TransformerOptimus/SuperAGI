version: "3.8"
services:
  backend:
    image: "superagidev/superagi:main"
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - PINECONE_API_KEY=$PINECONE_API_KEY
      - PINECONE_ENVIRONMENT=$PINECONE_ENVIRONMENT
      - OPENAI_API_KEY=$OPENAI_API_KEY
      - PALM_API_KEY=$PALM_API_KEY
      - OPENAI_API_BASE=$OPENAI_API_BASE
      - MODEL_NAME=$MODEL_NAME
      - RESOURCES_SUMMARY_MODEL_NAME=$RESOURCES_SUMMARY_MODEL_NAME
      - MAX_TOOL_TOKEN_LIMIT=$MAX_TOOL_TOKEN_LIMIT
      - DB_NAME=$DB_NAME
      - POSTGRES_URL=$POSTGRES_URL
      - DB_USERNAME=$DB_USERNAME
      - DB_PASSWORD=$DB_PASSWORD
      - REDIS_URL=$REDIS_URL
      - STORAGE_TYPE=$STORAGE_TYPE
      - TOOLS_DIR=$TOOLS_DIR
      - RESOURCES_INPUT_ROOT_DIR=$RESOURCES_INPUT_ROOT_DIR
      - RESOURCES_OUTPUT_ROOT_DIR=$RESOURCES_OUTPUT_ROOT_DIR
      - BUCKET_NAME=$BUCKET_NAME
      - INSTAGRAM_TOOL_BUCKET_NAME=$INSTAGRAM_TOOL_BUCKET_NAME
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - ENV=$ENV
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - expiry_time_hours=$expiry_time_hours
      - GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID
      - GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET
      - FRONTEND_URL=$FRONTEND_URL
      - ENCRYPTION_KEY=$ENCRYPTION_KEY
      - WEAVIATE_USE_EMBEDDED=$WEAVIATE_USE_EMBEDDED
      - GOOGLE_API_KEY=$GOOGLE_API_KEY
      - SEARCH_ENGINE_ID=$SEARCH_ENGINE_ID
      - SERP_API_KEY=$SERP_API_KEY
      - EMAIL_ADDRESS=$EMAIL_ADDRESS
      - EMAIL_PASSWORD=$EMAIL_PASSWORD
      - EMAIL_SMTP_HOST=$EMAIL_SMTP_HOST
      - EMAIL_SMTP_PORT=$EMAIL_SMTP_PORT
      - EMAIL_IMAP_SERVER=$EMAIL_IMAP_SERVER
      - EMAIL_SIGNATURE=$EMAIL_SIGNATURE
      - EMAIL_DRAFT_MODE_WITH_FOLDER=$EMAIL_DRAFT_MODE_WITH_FOLDER
      - EMAIL_ATTACHMENT_BASE_PATH=$EMAIL_ATTACHMENT_BASE_PATH
      - GITHUB_USERNAME=$GITHUB_USERNAME
      - GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN
      - JIRA_INSTANCE_URL=$JIRA_INSTANCE_URL
      - JIRA_USERNAME=$JIRA_USERNAME
      - JIRA_API_TOKEN=$JIRA_API_TOKEN
      - SLACK_BOT_TOKEN=$SLACK_BOT_TOKEN
      - STABILITY_API_KEY=$STABILITY_API_KEY
      - ENGINE_ID=$ENGINE_ID
      - RESOURCE_VECTOR_STORE=$RESOURCE_VECTOR_STORE
      - RESOURCE_VECTOR_STORE_INDEX_NAME=$RESOURCE_VECTOR_STORE_INDEX_NAME
      - REDIS_VECTOR_STORE_URL=$REDIS_VECTOR_STORE_URL
      - QDRANT_PORT=$QDRANT_PORT
      - QDRANT_HOST_NAME=$QDRANT_HOST_NAME
      - CHROMA_HOST_NAME=$CHROMA_HOST_NAME
      - CHROMA_PORT=$CHROMA_PORT
    command: ["/app/entrypoint.sh"]

  celery:
    image: "superagidev/superagi:main"
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - PINECONE_API_KEY=$PINECONE_API_KEY
      - PINECONE_ENVIRONMENT=$PINECONE_ENVIRONMENT
      - OPENAI_API_KEY=$OPENAI_API_KEY
      - PALM_API_KEY=$PALM_API_KEY
      - OPENAI_API_BASE=$OPENAI_API_BASE
      - MODEL_NAME=$MODEL_NAME
      - RESOURCES_SUMMARY_MODEL_NAME=$RESOURCES_SUMMARY_MODEL_NAME
      - MAX_TOOL_TOKEN_LIMIT=$MAX_TOOL_TOKEN_LIMIT
      - DB_NAME=$DB_NAME
      - POSTGRES_URL=$POSTGRES_URL
      - DB_USERNAME=$DB_USERNAME
      - DB_PASSWORD=$DB_PASSWORD
      - REDIS_URL=$REDIS_URL
      - STORAGE_TYPE=$STORAGE_TYPE
      - TOOLS_DIR=$TOOLS_DIR
      - RESOURCES_INPUT_ROOT_DIR=$RESOURCES_INPUT_ROOT_DIR
      - BUCKET_NAME=$BUCKET_NAME
      - INSTAGRAM_TOOL_BUCKET_NAME=$INSTAGRAM_TOOL_BUCKET_NAME
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - ENV=$ENV
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - expiry_time_hours=$expiry_time_hours
      - GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID
      - GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET
      - FRONTEND_URL=$FRONTEND_URL
      - ENCRYPTION_KEY=$ENCRYPTION_KEY
      - WEAVIATE_USE_EMBEDDED=$WEAVIATE_USE_EMBEDDED
      - GOOGLE_API_KEY=$GOOGLE_API_KEY
      - SEARCH_ENGINE_ID=$SEARCH_ENGINE_ID
      - SERP_API_KEY=$SERP_API_KEY
      - EMAIL_ADDRESS=$EMAIL_ADDRESS
      - EMAIL_PASSWORD=$EMAIL_PASSWORD
      - EMAIL_SMTP_HOST=$EMAIL_SMTP_HOST
      - EMAIL_SMTP_PORT=$EMAIL_SMTP_PORT
      - EMAIL_IMAP_SERVER=$EMAIL_IMAP_SERVER
      - EMAIL_SIGNATURE=$EMAIL_SIGNATURE
      - EMAIL_DRAFT_MODE_WITH_FOLDER=$EMAIL_DRAFT_MODE_WITH_FOLDER
      - EMAIL_ATTACHMENT_BASE_PATH=$EMAIL_ATTACHMENT_BASE_PATH
      - GITHUB_USERNAME=$GITHUB_USERNAME
      - GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN
      - JIRA_INSTANCE_URL=$JIRA_INSTANCE_URL
      - JIRA_USERNAME=$JIRA_USERNAME
      - JIRA_API_TOKEN=$JIRA_API_TOKEN
      - SLACK_BOT_TOKEN=$SLACK_BOT_TOKEN
      - STABILITY_API_KEY=$STABILITY_API_KEY
      - ENGINE_ID=$ENGINE_ID
      - RESOURCE_VECTOR_STORE=$RESOURCE_VECTOR_STORE
      - RESOURCE_VECTOR_STORE_INDEX_NAME=$RESOURCE_VECTOR_STORE_INDEX_NAME
      - REDIS_VECTOR_STORE_URL=$REDIS_VECTOR_STORE_URL
      - QDRANT_PORT=$QDRANT_PORT
      - QDRANT_HOST_NAME=$QDRANT_HOST_NAME
      - CHROMA_HOST_NAME=$CHROMA_HOST_NAME
      - CHROMA_PORT=$CHROMA_PORT
    command: ["/app/entrypoint_celery.sh"]
    volumes:
      - ./workspace:/app/workspace

  gui:
    image: "superagidev/superagi-frontend:main"
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_BASE_URL=/api

  redis:
    image: "redis/redis-stack-server:latest"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    # uncomment to expose redis port to host
    # ports:
    #   - "6379:6379"
    volumes:
      - superagi_redis_data:/data

  postgres:
    image: "docker.io/library/postgres:latest"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=$DB_USERNAME
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$DB_NAME"]
      interval: 5s
      timeout: 60s
      retries: 10
      start_period: 10s
    volumes:
      - superagi_postgres_data:/var/lib/postgresql/data/
    # uncomment to expose postgres port to host
    # ports:
    #   - "5432:5432"

  weaviate:
    image: semitechnologies/weaviate:1.21.1
    restart: unless-stopped
    volumes:
      - superagi_weaviate_data:/var/lib/weaviate
    command:
      - --host
      - 0.0.0.0
      - --port
      - "8080"
      - --scheme
      - http
    environment:
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      AUTHENTICATION_APIKEY_ENABLED: true
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: $WEAVIATE_APIKEY
      AUTHENTICATION_APIKEY_USERS: $WEAVIATE_APIKEY
      ENABLE_MODULES: text2vec-openai,generative-openai

  proxy:
    image: superagidev/superagi-proxy
    restart: unless-stopped
    ports:
      - $EXTERNAL_PORT:80
    depends_on:
      - backend
      - gui

volumes:
  superagi_postgres_data:
  superagi_redis_data:
  superagi_weaviate_data:
